// ‚úÖ WebsitesList.js
import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { API_BASE } from '../utils/config';

const WebsitesList = () => {
    const [websites, setWebsites] = useState([]);
    const [error, setError] = useState(null);
    const navigate = useNavigate();

    useEffect(() => {
        const token = localStorage.getItem("access_token");
        if (!token) return setError("üîê ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ß‡πâ");

        fetch(`${API_BASE}/api/get-websites`, {
            headers: {
                "Authorization": `Bearer ${token}`
            }
        })
            .then(res => {
                if (!res.ok) throw new Error("‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
                return res.json();
            })
            .then(data => {
                const filtered = data.filter(site => site.id);
                filtered.sort((a, b) => new Date(a.date) - new Date(b.date));
                setWebsites(filtered);
            })
            .catch((err) => setError(err.message));
    }, []);

    const handleDelete = async (id) => {
        if (!id) return alert("ID ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");

        const confirmed = window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ô‡∏µ‡πâ?");
        if (!confirmed) return;

        const token = localStorage.getItem("access_token");
        const res = await fetch(`${API_BASE}/api/delete-website/${id}`, {
            method: "DELETE",
            headers: {
                Authorization: `Bearer ${token}`
            }
        });

        if (res.ok) {
            setWebsites((prev) => prev.filter(site => site.id !== id));
        } else {
            alert("‚ùå ‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        }
    };

    const handleEdit = (id) => {
        if (!id) return alert("ID ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        navigate(`/edit-website/${id}`);
    };

    return (
        <div className="container mt-5">
            <h2 className="mb-4">üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h2>
            {error && <div className="alert alert-danger">{error}</div>}
            {!error && websites.length === 0 && <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ß‡πâ</p>}

            {websites.length > 0 && (
                <table className="table table-bordered">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</th>
                            <th>URL</th>
                            <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</th>
                            <th>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody>
                        {websites.map((site, index) => (
                            <tr key={site.id}>
                                <td>{index + 1}</td>
                                <td>{site.websiteName}</td>
                                <td>
                                    <a href={site.websiteUrl} target="_blank" rel="noreferrer">
                                        {site.websiteUrl}
                                    </a>
                                </td>
                                <td>{new Date(site.date).toLocaleString()}</td>
                                <td>
                                    <div className="d-flex gap-2">
                                        <button onClick={() => handleEdit(site.id)} className="btn btn-sm btn-warning">
                                            ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                        </button>
                                        <button onClick={() => handleDelete(site.id)} className="btn btn-sm btn-danger">
                                            üóëÔ∏è ‡∏•‡∏ö
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            )}
        </div>
    );
};

export default WebsitesList;
