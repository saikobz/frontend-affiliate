// ‚úÖ EditWebsite.js
import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { API_BASE } from '../utils/config';

const EditWebsite = () => {
    const { id } = useParams();
    const navigate = useNavigate();
    const [website, setWebsite] = useState(null);
    const [websiteName, setWebsiteName] = useState('');
    const [websiteUrl, setWebsiteUrl] = useState('');
    const [message, setMessage] = useState(null);

    useEffect(() => {
        const token = localStorage.getItem('access_token');
        if (!token) return setMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");

        fetch(`${API_BASE}/api/get-websites`, {
            headers: { Authorization: `Bearer ${token}` }
        })
            .then(res => res.json())
            .then(data => {
                const found = data.find(w => w.id === id);
                if (!found) {
                    setMessage("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç");
                } else {
                    setWebsite(found);
                    setWebsiteName(found.websiteName);
                    setWebsiteUrl(found.websiteUrl);
                }
            });
    }, [id]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        const token = localStorage.getItem('access_token');
        if (!token) return setMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");

        const res = await fetch(`${API_BASE}/api/update-website/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${token}`
            },
            body: JSON.stringify({ websiteName, websiteUrl })
        });

        if (res.ok) {
            setMessage("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
            setTimeout(() => navigate('/websites'), 1500);
        } else {
            const err = await res.text();
            setMessage("‚ùå ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + err);
        }
    };

    return (
        <div className="container mt-5">
            <h2 className="mb-4">‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</h2>
            {message && <div className="alert alert-info">{message}</div>}
            {website && (
                <form onSubmit={handleSubmit}>
                    <div className="mb-3">
                        <label className="form-label">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</label>
                        <input
                            type="text"
                            className="form-control"
                            value={websiteName}
                            onChange={(e) => setWebsiteName(e.target.value)}
                            required
                        />
                    </div>
                    <div className="mb-3">
                        <label className="form-label">URL ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</label>
                        <input
                            type="url"
                            className="form-control"
                            value={websiteUrl}
                            onChange={(e) => setWebsiteUrl(e.target.value)}
                            required
                        />
                    </div>
                    <button type="submit" className="btn btn-primary">üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á</button>
                </form>
            )}
        </div>
    );
};

export default EditWebsite;
